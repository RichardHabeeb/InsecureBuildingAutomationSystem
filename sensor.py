################################################################################
# Tempurature Sensor
################################################################################

################################################################################
# IMPORTS
################################################################################
import time
import json
import socket

################################################################################
# CLASSES
################################################################################


################################################################################
# VARIABLES
################################################################################


################################################################################
# FUNCTIONS
################################################################################


################################################################################
# MAIN
################################################################################

def main():
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)


    while True:
        time.sleep(1)

        data = {
            'currentTemp':30
        }

        #Publish temp data to the network
        sock.sendto(json.dumps(data), ("192.168.0.255", 4444))

if __name__ == "__main__":
    main()
